@page "/"
@page "/category/{categoryId:int}"
@using Whu.BLM.NewsSystem.Shared.Entity.Content;



<Row Align="center">
    <Menu Mode=MenuMode.Horizontal>
        <MenuItem>
            <MenuLink Href="/">推荐</MenuLink>
        </MenuItem>
        @for (int i = 0; i < NewsCategories.Count; i++)
        {
            var newsCategory = NewsCategories[i];
            <AntDesign.MenuItem>
                <MenuLink Href=@($"/category/{newsCategory.Id}")>@newsCategory.Name</MenuLink>
            </AntDesign.MenuItem>
        }
    </Menu>
</Row>

<AntList DataSource="@News" ItemLayout="@ListItemLayout.Vertical">
    <ChildContent>
        @* TODO 当不是管理员时，不显示 editAction *@
        <ListItem Actions="@CreateNewsActions(context)">
            <ListItemMeta Description="@context.AbstractContent">
                <TitleTemplate>
                    <a href="@context.OringinUrl">【@context.NewsCategory.Name】@context.Title</a>
                </TitleTemplate>
            </ListItemMeta>
        </ListItem>
    </ChildContent>
</AntList>

@code {

    [Parameter]
    public int? CategoryId { get; set; }

    private IList<NewsCategory> NewsCategories = new List<NewsCategory>();
    private IList<News> News = new List<News>();

    private RenderFragment[] CreateNewsActions(News news)
    {
        RenderFragment editAction = @<a href="/admin/news/@news.Id">编辑</a>;
        RenderFragment deleteAction = @<Button Type="@ButtonType.Link" Danger>删除</Button>;
        return new[] {editAction, deleteAction};
    }

    protected override async Task OnInitializedAsync()
    {
    //NewsCategories = await Http.GetFromJsonAsync<IList<NewsCategory>>("news_categories");
        var categories = new[] {"军事", "政治", "娱乐", "经济", "国际"};
        int i = 0;
        foreach (var categoryName in categories)
        {
            NewsCategories.Add(new NewsCategory
            {
                Id = i,
                Name = categoryName,
                News = new List<News>()
            });
            i++;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        News.Clear();
        if (CategoryId == null)
        {
            Random random = new Random();
            for (int i = 0; i < 100; i++)
            {
                News.Add(new News
                {
                    Id = i,
                    Title = $"News {i}",
                    NewsCategory = NewsCategories[random.Next(0, NewsCategories.Count)],
                    OringinUrl = $"https://www.baidu.com/s?wd=news{i}",
                    AbstractContent = $"Content{i}"
                });
            }
        }
        else
        {
            for (int i = 0; i < 10; i++)
            {
                News.Add(new News
                {
                    Id = i,
                    Title = $"News {i}",
                    NewsCategory = NewsCategories[CategoryId ?? 0],
                    OringinUrl = $"https://www.baidu.com/s?wd=news{i}",
                    AbstractContent = $"Content{i}"
                });
            }
        }
    }

}