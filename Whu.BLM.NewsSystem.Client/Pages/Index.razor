@page "/"
@page "/category/{categoryId:int}"
@inject INewsCategoryService _newsCategoryService
@inject INewsService _newsService
@using Whu.BLM.NewsSystem.Shared.Entity.Content;
@using Whu.BLM.NewsSystem.Client.Services
@using Whu.BLM.NewsSystem.Client.Services.Impl


<Row Align="center">
    <Menu Mode=MenuMode.Horizontal>
        <MenuItem>
            <MenuLink Href="/">推荐</MenuLink>
        </MenuItem>
        @for (int i = 0; i < NewsCategories.Count; i++)
        {
            var newsCategory = NewsCategories[i];
            <AntDesign.MenuItem>
                <MenuLink Href=@($"/category/{newsCategory.Id}")>@newsCategory.Name</MenuLink>
            </AntDesign.MenuItem>
        }
    </Menu>
</Row>

<AntList DataSource="@News" ItemLayout="@ListItemLayout.Vertical">
    <ChildContent>
        <ListItem Actions="@CreateNewsActions(context)">
            <ListItemMeta Description="@context.AbstractContent">
                <TitleTemplate>
                    <a href="@context.OringinUrl">【@context.NewsCategory.Name】@context.Title</a>
                </TitleTemplate>
            </ListItemMeta>
        </ListItem>
    </ChildContent>
</AntList>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }

    [Parameter]
    public int? CategoryId { get; set; }

    private IList<NewsCategory> NewsCategories = new List<NewsCategory>();
    private IList<News> News = new List<News>();

    private RenderFragment[] CreateNewsActions(News news)
    {
        if (AuthenticationState.Result.User.IsInRole("Admin"))
        {
            RenderFragment editAction = @<a href="/news/edit/@news.Id">编辑</a>;
            RenderFragment deleteAction = @<Button Type="@ButtonType.Link" Danger>删除</Button>;
            return new[] {editAction, deleteAction};
        }
        return new RenderFragment[] {};
    }

    protected override async Task OnInitializedAsync()
    {
        NewsCategories = await _newsCategoryService.GetNewsCategoriesAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
    // TODO 按页码加载新闻列表
        if (CategoryId == null)
        {
            News = await _newsService.GetNewsListAsync(1, 10);
        }
        else
        {
            News = await _newsService.GetNewsListAsync(CategoryId ?? 0, 1, 10);
        }
    }

}