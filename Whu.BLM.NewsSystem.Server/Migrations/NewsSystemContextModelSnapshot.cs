// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Whu.BLM.NewsSystem.Server.Context;

namespace Whu.BLM.NewsSystem.Server.Migrations
{
    [DbContext(typeof(NewsSystemContext))]
    partial class NewsSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("NewsUser", b =>
                {
                    b.Property<int>("VisitedById")
                        .HasColumnType("int");

                    b.Property<int>("VisitedNewsId")
                        .HasColumnType("int");

                    b.HasKey("VisitedById", "VisitedNewsId");

                    b.HasIndex("VisitedNewsId");

                    b.ToTable("NewsUser");
                });

            modelBuilder.Entity("NewsUser1", b =>
                {
                    b.Property<int>("LikedById")
                        .HasColumnType("int");

                    b.Property<int>("LikedNewsId")
                        .HasColumnType("int");

                    b.HasKey("LikedById", "LikedNewsId");

                    b.HasIndex("LikedNewsId");

                    b.ToTable("NewsUser1");
                });

            modelBuilder.Entity("NewsUser2", b =>
                {
                    b.Property<int>("DislikedById")
                        .HasColumnType("int");

                    b.Property<int>("DislikedNewsId")
                        .HasColumnType("int");

                    b.HasKey("DislikedById", "DislikedNewsId");

                    b.HasIndex("DislikedNewsId");

                    b.ToTable("NewsUser2");
                });

            modelBuilder.Entity("Whu.BLM.NewsSystem.Shared.Entity.Content.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AbstractContent")
                        .HasColumnType("longtext");

                    b.Property<int?>("NewsCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("OringinUrl")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NewsCategoryId");

                    b.HasIndex("OringinUrl", "Title")
                        .IsUnique();

                    b.ToTable("News");
                });

            modelBuilder.Entity("Whu.BLM.NewsSystem.Shared.Entity.Content.NewsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NewsCategories");
                });

            modelBuilder.Entity("Whu.BLM.NewsSystem.Shared.Entity.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserGroup")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NewsUser", b =>
                {
                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("VisitedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Content.News", null)
                        .WithMany()
                        .HasForeignKey("VisitedNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsUser1", b =>
                {
                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("LikedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Content.News", null)
                        .WithMany()
                        .HasForeignKey("LikedNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsUser2", b =>
                {
                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("DislikedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Content.News", null)
                        .WithMany()
                        .HasForeignKey("DislikedNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Whu.BLM.NewsSystem.Shared.Entity.Content.News", b =>
                {
                    b.HasOne("Whu.BLM.NewsSystem.Shared.Entity.Content.NewsCategory", "NewsCategory")
                        .WithMany("News")
                        .HasForeignKey("NewsCategoryId");

                    b.Navigation("NewsCategory");
                });

            modelBuilder.Entity("Whu.BLM.NewsSystem.Shared.Entity.Content.NewsCategory", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
